# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import wonderland_pb2 as wonderland__pb2


class PipelineServiceStub(object):
  """* Service for pipelines storing and executing functions and pipelines 
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.LaunchPipeline = channel.unary_unary(
        '/proto_server.PipelineService/LaunchPipeline',
        request_serializer=wonderland__pb2.Pipeline.SerializeToString,
        response_deserializer=wonderland__pb2.Launch.FromString,
        )
    self.StartLaunch = channel.unary_unary(
        '/proto_server.PipelineService/StartLaunch',
        request_serializer=wonderland__pb2.ObjectID.SerializeToString,
        response_deserializer=wonderland__pb2.OperationStatus.FromString,
        )
    self.GetLaunch = channel.unary_unary(
        '/proto_server.PipelineService/GetLaunch',
        request_serializer=wonderland__pb2.ObjectID.SerializeToString,
        response_deserializer=wonderland__pb2.Launch.FromString,
        )
    self.StopLaunch = channel.unary_unary(
        '/proto_server.PipelineService/StopLaunch',
        request_serializer=wonderland__pb2.ObjectID.SerializeToString,
        response_deserializer=wonderland__pb2.OperationStatus.FromString,
        )
    self.DeleteLaunch = channel.unary_unary(
        '/proto_server.PipelineService/DeleteLaunch',
        request_serializer=wonderland__pb2.ObjectID.SerializeToString,
        response_deserializer=wonderland__pb2.OperationStatus.FromString,
        )
    self.GetFile = channel.unary_unary(
        '/proto_server.PipelineService/GetFile',
        request_serializer=wonderland__pb2.FileRequest.SerializeToString,
        response_deserializer=wonderland__pb2.FileResponse.FromString,
        )


class PipelineServiceServicer(object):
  """* Service for pipelines storing and executing functions and pipelines 
  """

  def LaunchPipeline(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartLaunch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLaunch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopLaunch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteLaunch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFile(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PipelineServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'LaunchPipeline': grpc.unary_unary_rpc_method_handler(
          servicer.LaunchPipeline,
          request_deserializer=wonderland__pb2.Pipeline.FromString,
          response_serializer=wonderland__pb2.Launch.SerializeToString,
      ),
      'StartLaunch': grpc.unary_unary_rpc_method_handler(
          servicer.StartLaunch,
          request_deserializer=wonderland__pb2.ObjectID.FromString,
          response_serializer=wonderland__pb2.OperationStatus.SerializeToString,
      ),
      'GetLaunch': grpc.unary_unary_rpc_method_handler(
          servicer.GetLaunch,
          request_deserializer=wonderland__pb2.ObjectID.FromString,
          response_serializer=wonderland__pb2.Launch.SerializeToString,
      ),
      'StopLaunch': grpc.unary_unary_rpc_method_handler(
          servicer.StopLaunch,
          request_deserializer=wonderland__pb2.ObjectID.FromString,
          response_serializer=wonderland__pb2.OperationStatus.SerializeToString,
      ),
      'DeleteLaunch': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteLaunch,
          request_deserializer=wonderland__pb2.ObjectID.FromString,
          response_serializer=wonderland__pb2.OperationStatus.SerializeToString,
      ),
      'GetFile': grpc.unary_unary_rpc_method_handler(
          servicer.GetFile,
          request_deserializer=wonderland__pb2.FileRequest.FromString,
          response_serializer=wonderland__pb2.FileResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto_server.PipelineService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
